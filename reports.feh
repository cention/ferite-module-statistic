uses 'console';
uses 'statistic';
uses 'ObjRunSrv';
uses 'objrunsrv-workflow';
uses 'webframework/webframework';

/**
 * @namespace Reports
 * @brief Contains all Cention Reports
 */

 
namespace Reports {
	function totalAverageTimes( string datacol, string timecol, string tbl, object report, object key ) {
		string channels = '';
		string areas = '';
		string users = '';
		array rows;
		array totals = [];

		totals['total'] = 0;

		if( report.channels ) channels = "AND ${tbl}.service_id IN (${report.channels.join(',')}) ";
		if( report.areas ) areas = "AND ${tbl}.area_id IN (${report.areas.join(',')}) ";
		if( report.users ) users = "AND ${tbl}.user_id IN (${report.users.join(',')}) ";

		rows = Database.queryToArray(
			"SELECT floor(avg(${tbl}.${datacol})) AS total " +
			"FROM ${tbl} " +
			"WHERE ${tbl}.${timecol} >= ${report.startTime} " +
			"AND ${tbl}.${timecol} <= ${report.endTime} " +
			"$areas $users $channels"
		);

		if( rows and rows[0]['total'] ) {
			totals['total'] = report.formatTime(rows[0]['total'].toNumber());
		}

		report.groups.each() using ( group ) {
			string name = group.groupName();
			totals[name] = [];

			Statistics.resetOrderID();

			rows = Database.queryToArray(
				"SELECT floor(avg(${tbl}.${datacol})) AS total, " + group.select(key) + " " +
				"FROM ${tbl} " + (group.from() ? ", " +  group.from() + " " : "") +
				"WHERE ${tbl}.${timecol} >= ${report.startTime} " +
				"AND ${tbl}.${timecol} <= ${report.endTime} " +
				"$areas $users $channels " + (group.where(key) ? " AND " + group.where(key) + " " : "") +
				"GROUP BY " + group.groupBy()
			);

			rows.each() using ( row ) {
				string n = (group.needTranslation() ? I(row[name].trim(" \t\r\n")) : row[name].trim(" \t\r\n"));
				totals[name][n] = report.formatTime(row['total'].toNumber());
			};
		};

		return totals;
	}

	class IncomingErrands extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'incoming';
		function name() return I('Incoming');
		function select() return 'count(distinct(workflow_reporterranddatas.errand_id)) AS key';
		function from() return 'workflow_reporterranddatas';
		function where() return '';
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnUser() return '';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_arrive';
		function columnData() return 'workflow_reporterranddatas.errand_id';
	}

	class ClosedErrands extends IncomingErrands {
		function identifier() return 'closed';
		function name() return I('Closed');
		function where() return 'timestamp_close > 0 AND close_type IN (3, 13, 19, 20, 21)';
		function columnUser() return 'workflow_reporterranddatas.user_id';
		function columnTag() return 'workflow_errand_tags_links.child_workflow_tag_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_close';
	}

	class ClosedErrandsWithReplies extends ClosedErrands {
		function identifier() return 'replies';
		function name() return I('Replies');
		function from() return 'workflow_reporterranddatas ' +
			'JOIN workflow_reporterranddatas AS data2 ' +
				'ON workflow_reporterranddatas.errand_id=data2.parent_id';
		function where() return
			'workflow_reporterranddatas.timestamp_close > 0 AND ' +
			'workflow_reporterranddatas.timestamp_replied > 0 AND ' +
			'data2.close_type != 7';
	}
	
	class SatisfactionMeter extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'answer';
		function name() return I('Answer');
		function select() return 'count(workflow_reporterranddatas.errand_id) AS key';
		function from() return 'workflow_reporterranddatas, workflow_feedbacks';
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnData() return 'workflow_reporterranddatas.errand_id';
		function where() return 'timestamp_close > 0 AND close_type IN (3, 13, 19) and workflow_feedbacks.errand_fkey = workflow_reporterranddatas.errand_id';
		function columnUser() return 'workflow_reporterranddatas.user_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_close';
	}
	
	class AverageErrandResponseTime extends ClosedErrands {
		function identifier() return 'average_errand_response_time';
		function name() return I('Average response time');
		function select() return 'floor(avg(workflow_reporterranddatas.response_time) / ' + .seconds() + ') AS key';
		function seconds() return 1;
		function isTimeType() return true;
		function total( array& values, object report ) {
			return Reports.totalAverageTimes('response_time', 'timestamp_close', 'workflow_reporterranddatas', report, self);
		}
	}

	class AverageErrandResponseTimeInSeconds extends AverageErrandResponseTime {
		function identifier() return 'average_errand_response_time_in_seconds';
		function name() return I('Average response time (seconds)');
		function seconds() return 1;
	}

	class AverageErrandResponseTimeInMinutes extends AverageErrandResponseTime {
		function identifier() return 'average_errand_response_time_in_minutes';
		function name() return I('Average response time (minutes)');
		function seconds() return 60;
	}

	class AverageErrandResponseTimeInHours extends AverageErrandResponseTime {
		function identifier() return 'average_errand_response_time_in_hours';
		function name() return I('Average response time (hours)');
		function seconds() return 3600;
	}

	class AverageErrandResponseTimeInDays extends AverageErrandResponseTime {
		function identifier() return 'average_errand_response_time_in_days';
		function name() return I('Average response time (days)');
		function seconds() return 86400;
	}

	class AverageErrandProcessTime extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'average_errand_process_time';
		function name() return I('Average process time');
		function select() return 'floor(avg(workflow_reportuserdatas.process_time) / ' + .seconds() + ') AS key';
		function from() return 'workflow_reportuserdatas';
		function where() return '';
		function columnOrganisation() return 'workflow_reportuserdatas.organisation_id';
		function columnArea() return 'workflow_reportuserdatas.area_id';
		function columnUser() return 'workflow_reportuserdatas.user_id';
		function columnChannel() return 'workflow_reportuserdatas.service_id';
		function columnTime() return 'workflow_reportuserdatas.timestamp_open';
		function seconds() return 1;
		function isTimeType() return true;
		function total( array& values, object report ) {
			return Reports.totalAverageTimes('process_time', 'timestamp_open', 'workflow_reportuserdatas', report, self);
		}
	}

	class AverageErrandProcessTimeInSeconds extends AverageErrandProcessTime {
		function identifier() return 'average_errand_process_time_in_seconds';
		function name() return I('Average process time (seconds)');
		function seconds() return 1;
	}

	class AverageErrandProcessTimeInMinutes extends AverageErrandProcessTime {
		function identifier() return 'average_errand_process_time_in_minutes';
		function name() return I('Average process time (minutes)');
		function seconds() return 60;
	}

	class AverageErrandProcessTimeInHours extends AverageErrandProcessTime {
		function identifier() return 'average_errand_process_in_hours';
		function name() return I('Average process time (hours)');
		function seconds() return 3600;
	}

	class AverageErrandProcessTimeInDays extends AverageErrandProcessTime {
		function identifier() return 'average_errand_process_in_days';
		function name() return I('Average process time (days)');
		function seconds() return 86400;
	}
	
	class ErrandProcessTime extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'errand_process_time';
		function name() return I('Processed');
		function select() return 'count(cast(' + .columnDuration() + ' / 60 AS integer)) AS key';
		function from() return 'workflow_reporterranddatas';
		function where() return '';
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnUser() return 'workflow_reporterranddatas.user_id';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_close';
		function columnDuration () return 'workflow_reporterranddatas.process_time';
		function seconds() raise new Error('Function seconds() has not been implemented.');
	}
	
	class ErrandResponseTime extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'errand_response_time';
		function name() return I('Responded');
		function select() return 'count(cast(' + .columnDuration() + ' / 60 AS integer)) AS key';
		function from() return 'workflow_reporterranddatas';
		function where() return '';
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnUser() return 'workflow_reporterranddatas.user_id';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_close';
		function columnDuration () return 'workflow_reporterranddatas.response_time';
		function seconds() raise new Error('Function seconds() has not been implemented.');
	}
	
	class ErrandClassification extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'errand_classification';
		function name() return I('Tags');
		function select() return 'count(distinct(workflow_reporterranddatas.errand_id)) AS key';
		function from() {
			return 'workflow_reporterranddatas ' + 
				'JOIN workflow_errand_tags_links ' +
					'ON workflow_errand_tags_links.parent_workflow_errand_id = workflow_reporterranddatas.errand_id';
		}
		function where() return '';
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnUser() return 'workflow_reporterranddatas.user_id';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_close';
		function columnTag() return 'workflow_errand_tags_links.child_workflow_tag_id';
	}

	abstract class ErrandClosureStatus extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() raise new Error('Function() identifier has not been implemented.');
		function name() raise new Error('Function name() has not been implemented.');
		function select() return 'count(distinct(workflow_actions.workflow_action_id)) AS key';
		function from() {
			return 'workflow_actions ' + 
				'JOIN workflow_errand_actions_links ' +
					'ON workflow_actions.workflow_action_id = workflow_errand_actions_links.child_workflow_action_id ' +
				'JOIN workflow_reporterranddatas ' +
					'ON workflow_reporterranddatas.errand_id = workflow_errand_actions_links.parent_workflow_errand_id ' +
				'JOIN workflow_errand_tags_links ' +
					'ON workflow_errand_tags_links.parent_workflow_errand_id = workflow_reporterranddatas.errand_id';
		}
		function where() raise new Error('Function where() has not been implemented.');
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnUser() return 'workflow_actions.origin_fkey';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnTag() return 'workflow_errand_tags_links.child_workflow_tag_id';
		function columnTime() return 'workflow_actions.timestampwhen';
	}

	class ErrandClosureStatusAnswered extends ErrandClosureStatus {
		function identifier() return 'errand_closure_status_answered';
		function name() return I('Answered');
		function where() return 'workflow_actions.type IN (3, 19)'; // TODO: Add Resend
	}

	class ErrandClosureStatusDeleted extends ErrandClosureStatus {
		function identifier() return 'errand_closure_status_deleted';
		function name() return I('Deleted');
		function where() return 'workflow_actions.type = 7';
	}

	class ErrandClosureStatusReturned extends ErrandClosureStatus {
		function identifier() return 'errand_closure_status_returned';
		function name() return I('Returned');
		function where() return 'workflow_actions.type = 8';
	}

	class ErrandClosureStatusForwardedToArea extends ErrandClosureStatus {
		function identifier() return 'errand_closure_status_forward_to_area';
		function name() return I('Forwarded to area');
		function where() return 'workflow_actions.type = 5';
	}

	class ErrandClosureStatusForwardedToAgent extends ErrandClosureStatus {
		function identifier() return 'errand_closure_status_forward_to_agent';
		function name() return I('Forwarded to agent');
		function where() return 'workflow_actions.type = 4';
	}
	
	class ErrandClosureStatusMovedToFolder extends ErrandClosureStatus {
		function identifier() return 'errand_closure_status_moved_to_folder';
		function name() return I('Moved to folder');
		function where() return 'workflow_actions.type = 6';
	}

	class ErrandClosureStatusChatFinished extends ErrandClosureStatus {
		function identifier() return 'errand_closure_status_chat_finished';
		function name() return I('Chat finished');
		function where() return 'workflow_actions.type = 20';
	}

	class ErrandClosureStatusChatExpired extends ErrandClosureStatus {
		function identifier() return 'errand_closure_status_chat_expired';
		function name() return I('Chat expired');
		function where() return 'workflow_actions.type = 21';
	}

	class ErrandsRespondedAccordingToSLATime extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'errands_responeded_according_to_sla_time';
		function name() return I('Responded according to SLA time');
		function select() return 'count(workflow_reporterranddatas.errand_id) AS key';
		function from() return 'workflow_reporterranddatas LEFT JOIN workflow_areas ON workflow_reporterranddatas.area_id = workflow_areas.workflow_area_id';
		function where() return 'workflow_reporterranddatas.timestamp_close > 0 AND workflow_reporterranddatas.responded_within_sla = true';
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnUser() return 'workflow_reporterranddatas.user_id';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_close';
	}

	class ErrandsRespondedAfterSLATime extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'errands_responeded_after_sla_time';
		function name() return I('Responded after SLA time');
		function select() return 'count(workflow_reporterranddatas.errand_id) AS key';
		function from() return 'workflow_reporterranddatas LEFT JOIN workflow_areas ON workflow_reporterranddatas.area_id = workflow_areas.workflow_area_id';
		function where() return 'workflow_reporterranddatas.timestamp_close > 0 AND workflow_reporterranddatas.responded_within_sla = false';
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnUser() return 'workflow_reporterranddatas.user_id';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_close';
	}

	class AcceptedChatRequests extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'accepted_chat_requests';
		function name() return I('Accepted chat requests');
		function select() return 'count(workflow_reportchatdatas.workflow_reportchatdata_id) AS key';
		function from() return 'workflow_reportchatdatas';
		function where() return 'workflow_reportchatdatas.accepted = true';
		function columnOrganisation() return 'workflow_reportchatdatas.organisation_id';
		function columnArea() return 'workflow_reportchatdatas.area_id';
		function columnUser() return '';
		function columnChannel() return '';
		function columnTime() return 'workflow_reportchatdatas.timestamp_when';
	}

	class RejectedClosedChatRequests extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'rejected_closed_chat_requests';
		function name() return I('Rejected (closed) chat requests');
		function select() return 'count(workflow_reportchatdatas.workflow_reportchatdata_id) AS key';
		function from() return 'workflow_reportchatdatas';
		function where() return 'workflow_reportchatdatas.rejected_closed = true';
		function columnOrganisation() return 'workflow_reportchatdatas.organisation_id';
		function columnArea() return 'workflow_reportchatdatas.area_id';
		function columnUser() return '';
		function columnChannel() return '';
		function columnTime() return 'workflow_reportchatdatas.timestamp_when';
	}

	class RejectedUnavailableChatRequests extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'rejected_unavailable_chat_requests';
		function name() return I('Rejected (unavailable) chat requests');
		function select() return 'count(workflow_reportchatdatas.workflow_reportchatdata_id) AS key';
		function from() return 'workflow_reportchatdatas';
		function where() return 'workflow_reportchatdatas.rejected_unavailable = true';
		function columnOrganisation() return 'workflow_reportchatdatas.organisation_id';
		function columnArea() return 'workflow_reportchatdatas.area_id';
		function columnUser() return '';
		function columnChannel() return '';
		function columnTime() return 'workflow_reportchatdatas.timestamp_when';
	}
	
	class ReceivedSatisfactionMeter extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'received_satisfaction_meter';
		function name() return I('Received satisfaction meter');
		function select() return 'count(workflow_feedbacks.workflow_feedback_id) AS key';
		function from() return 'workflow_feedbacks LEFT JOIN workflow_reporterranddatas ON workflow_reporterranddatas.errand_id = workflow_feedbacks.errand_fkey';
		function where() return 'workflow_feedbacks.feedback IN (1, 2, 3, 4, 5)';
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnUser() return 'workflow_reporterranddatas.user_id';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_close';
		function columnTag() return 'workflow_feedbacks.identifiername';
	}
	
	class ReceivedSatisfactionMeterAnswer1 extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'chose_satisfaction_meter_answer1';
		function name() return I('Chose answer 1');
		function select() return 'count(workflow_feedbacks.workflow_feedback_id) AS key';
		function from() return 'workflow_feedbacks LEFT JOIN workflow_reporterranddatas ON workflow_reporterranddatas.errand_id = workflow_feedbacks.errand_fkey';
		function where() return 'workflow_feedbacks.feedback = 1';
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnUser() return 'workflow_reporterranddatas.user_id';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_close';
		function columnTag() return 'workflow_feedbacks.identifiername';
	}
	
	class ReceivedSatisfactionMeterAnswer2 extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'chose_satisfaction_meter_answer2';
		function name() return I('Chose answer 2');
		function select() return 'count(workflow_feedbacks.workflow_feedback_id) AS key';
		function from() return 'workflow_feedbacks LEFT JOIN workflow_reporterranddatas ON workflow_reporterranddatas.errand_id = workflow_feedbacks.errand_fkey';
		function where() return 'workflow_feedbacks.feedback = 2';
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnUser() return 'workflow_reporterranddatas.user_id';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_close';
		function columnTag() return 'workflow_feedbacks.identifiername';
	}
	
	class ReceivedSatisfactionMeterAnswer3 extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'chose_satisfaction_meter_answer3';
		function name() return I('Chose answer 3');
		function select() return 'count(workflow_feedbacks.workflow_feedback_id) AS key';
		function from() return 'workflow_feedbacks LEFT JOIN workflow_reporterranddatas ON workflow_reporterranddatas.errand_id = workflow_feedbacks.errand_fkey';
		function where() return 'workflow_feedbacks.feedback = 3';
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnUser() return 'workflow_reporterranddatas.user_id';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_close';
		function columnTag() return 'workflow_feedbacks.identifiername';
	}
	
	class ReceivedSatisfactionMeterAnswer4 extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'chose_satisfaction_meter_answer4';
		function name() return I('Chose answer 4');
		function select() return 'count(workflow_feedbacks.workflow_feedback_id) AS key';
		function from() return 'workflow_feedbacks LEFT JOIN workflow_reporterranddatas ON workflow_reporterranddatas.errand_id = workflow_feedbacks.errand_fkey';
		function where() return 'workflow_feedbacks.feedback = 4';
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnUser() return 'workflow_reporterranddatas.user_id';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_close';
		function columnTag() return 'workflow_feedbacks.identifiername';
	}
	
	class ReceivedSatisfactionMeterAnswer5 extends Statistics.AbstractKeyFigure implements Statistics.KeyFigure {
		function identifier() return 'chose_satisfaction_meter_answer5';
		function name() return I('Chose answer 5');
		function select() return 'count(workflow_feedbacks.workflow_feedback_id) AS key';
		function from() return 'workflow_feedbacks LEFT JOIN workflow_reporterranddatas ON workflow_reporterranddatas.errand_id = workflow_feedbacks.errand_fkey';
		function where() return 'workflow_feedbacks.feedback = 5';
		function columnOrganisation() return 'workflow_reporterranddatas.organisation_id';
		function columnArea() return 'workflow_reporterranddatas.area_id';
		function columnUser() return 'workflow_reporterranddatas.user_id';
		function columnChannel() return 'workflow_reporterranddatas.service_id';
		function columnTime() return 'workflow_reporterranddatas.timestamp_close';
		function columnTag() return 'workflow_feedbacks.identifiername';
	}
	
	class OrganisationGroup extends Statistics.AbstractGroup implements Statistics.Group {
		function build() return [];
		function name() return I('Organization');
		function select( object key ) return 'workflow_organisations.workflow_organisation_id, workflow_organisations.name AS ' + .groupName();
		function from() return 'workflow_organisations';
		function where( object key ) return key.columnOrganisation() + ' = workflow_organisations.workflow_organisation_id';
		function groupBy() return 'workflow_organisations.workflow_organisation_id, workflow_organisations.name';
		function orderBy() return 'workflow_organisations.name';
		function extra() return [ 'workflow_organisation_id' ];
	}
	
	class AreaGroup extends Statistics.AbstractGroup implements Statistics.Group {
		function build() return [];
		function name() return I('Area');
		function select( object key ) return 'workflow_areas.workflow_area_id, workflow_areas.name AS ' + .groupName();
		function from() return 'workflow_areas';
		function where( object key ) return key.columnArea() + ' = workflow_areas.workflow_area_id';
		function groupBy() return 'workflow_areas.workflow_area_id, workflow_areas.name';
		function orderBy() return 'workflow_areas.name';
		function extra() return [ 'workflow_area_id' ];
	}

	class AgentGroup extends Statistics.AbstractGroup implements Statistics.Group {
		function build() return [];
		function name() return I('Agent');
		function select( object key ) return 'workflow_users.workflow_user_id, workflow_users.username AS ' + .groupName();
		function from() return 'workflow_users';
		function where( object key ) {
			if(key.columnUser())
				return key.columnUser() + ' = workflow_users.workflow_user_id';
			else
				return '';
		}
		function groupBy() return 'workflow_users.workflow_user_id, workflow_users.username';
		function orderBy() return 'workflow_users.username';
		function extra() return [ 'workflow_user_id' ];
	}

	class ChannelGroup extends Statistics.AbstractGroup implements Statistics.Group {
		function build() {
			array list = [];
			.channels.each() using ( _id ) {
				number id = (_id isa string ? _id.toNumber() : _id);
				object service = Workflow.Service.load(id);
				if( service ) {
					list[] = service.name;
				}
			};
			return .build(list);
		}
		function name() return I('Channel');
		function select( object key ) return 'workflow_services.workflow_service_id, workflow_services.name AS ' + .groupName();
		function from() return 'workflow_services';
		function where( object key ) return key.columnChannel() + ' = workflow_services.workflow_service_id';
		function groupBy() return 'workflow_services.workflow_service_id, workflow_services.name';
		function orderBy() return 'workflow_services.name';
		function extra() return [ 'workflow_service_id' ];
		function needTranslation() return true;
	}
	
	class CloseTagGroup extends Statistics.AbstractGroup implements Statistics.Group {
		function build() return [];
		function name() return I('Tags');
		function select( object key ) return 'workflow_tags.workflow_tag_id, workflow_tags.display AS ' + .groupName();
		function from() return 'workflow_tags';
		function where( object key ) return key.columnTag() + " = workflow_tags.workflow_tag_id AND substr(workflow_tags.name, 1, 7) = 'client.'";
		function groupBy() return 'workflow_tags.workflow_tag_id, workflow_tags.display';
		function orderBy() return 'workflow_tags.display';
		function needTranslation() return true;
		function extra return [];
		function valuesAsLabels() return true;
	}
	
	class DurationInMinutesGroup extends Statistics.AbstractGroup implements Statistics.Group {
		function build() return [];	
		function name() return I('Duration in minutes');
		function select( object key ) return 'cast(' + key.columnDuration() + ' / 60 AS integer) AS ' + .groupName();
		function from() return '';
		function where( object key ) return '';
		function groupBy() return .groupName();
		function orderBy() return .groupName();
		function extra() return [];
		function valuesAsLabels() return true;
	}

	class CustomDurationGroup extends Statistics.AbstractGroup implements Statistics.Group {
		function build() return [];
		function name() return .timeFormat.name;
		function select( object key ) return 'cast(' + key.columnDuration() + ' / ' + .timeFormat.interval + ' AS integer) AS ' + .groupName();
		function from() return '';
		function where( object key ) return '';
		function groupBy() return .groupName();
		function orderBy() return .groupName();
		function extra() return [];
		function valuesAsLabels() return true;
	}

	class YearGroup extends Statistics.AbstractDateTimeGroup implements Statistics.DateTimeGroup {
		function name() return I('Year');
		function feriteFormat() return '%Y';
		function format() return 'YYYY';
		function fields() return [ 'year' ];
		function seconds() return 31536000;
		function start( string year ) return .localDateToGMTtimestamp("${year}-01-01 00:00:00");
		function end( string year ) return .localDateToGMTtimestamp("${year}-12-31 23:59:59");
		function doInitialBuild() return false;
	}
	
	class MonthGroup extends Statistics.AbstractDateTimeGroup implements Statistics.DateTimeGroup {
		function name() return I('Month');
		function feriteFormat() return '%B';
		function format() return 'Month';
		function fields() return [ 'month' ];
		function seconds() return 2419200;
		function start( string item ) {
			// Calculate year based on middle of the year to avoid GMT rollover bug:
			string year = .localYearFromGMTtimestamp((.startTime()+.endTime())/2);
			
			string month = Date.localParse(item, '%B').format('%m');
			return .localDateToGMTtimestamp("${year}-${month}-01 00:00:00");
		}
		function end( string item ) {
			// Calculate year based on middle of the year to avoid GMT rollover bug:
			string year = .localYearFromGMTtimestamp((.startTime()+.endTime())/2);
			
			string month = Date.localParse(item, '%B').format('%m');
			number y = year.toNumber();
			number m = month.toNumber();
			number day = (m == 2
				? (y % 4
					? 28 :
					(y % 100
						? 29
						: (y % 400
							? 28
							: 29)))
				: ((m - 1) % 7 % 2
					? 30
					: 31));
			return .localDateToGMTtimestamp("${year}-${month}-${day} 23:59:59");
		}
	}

	class DayGroup extends Statistics.AbstractDateTimeGroup implements Statistics.DateTimeGroup {
		function name() return I('Day');
		function feriteFormat() return '%F';
		function format() return 'YYYY-MM-DD';
		function fields() return [ 'year', 'month', 'day' ];
		function seconds() return 86400;
		function start( string day ) return .localDateToGMTtimestamp("${day} 00:00:00");
		function end( string day ) return .localDateToGMTtimestamp("${day} 23:59:59");
	}

	class CustomAbsoluteTimeGroup extends Statistics.AbstractDateTimeGroup implements Statistics.DateTimeGroup {
		function build() {
			if( .timeGroupFormat ) {
				if( .timeGroupFormat.items.size() == 1 ) {
					if( .timeGroupFormat.seconds() <= 60 ) {
						return .build([ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11',
						                '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23',
						                '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35',
						                '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47',
						                '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59' ]);
					} else if( .timeGroupFormat.seconds() == 3600 ) {
						return .build([ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11',
						                '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23' ]);
					}
				}
			}
			return super.build();
		}
		function name() return (.timeGroupFormat ? I(.timeGroupFormat.name) : I('Day'));
		function feriteFormat() return (.timeGroupFormat ? .timeGroupFormat.format() : '%F');
		function format() return (.timeGroupFormat ? .timeGroupFormat.pgsqlFormat() : 'YYYY-MM-DD');
		function fields() return (.timeGroupFormat ? .timeGroupFormat.pgsqlFields() : [ 'year', 'month', 'day' ]);
		function seconds() return (.timeGroupFormat ? .timeGroupFormat.seconds() : 86400);
		function start( string item ) return 0;
		function end( string item ) return 0;
	}
	
	class AnswerGroup extends Statistics.AbstractGroup implements Statistics.Group {
		function build() return [];
		function name() return I('Option');
		function select( object key ) return 'workflow_feedbacks.feedback, workflow_feedbacks.feedback as ' + .groupName();
		function from() return '';
		function where( object key ) return 'workflow_feedbacks.feedback in (1, 2, 3, 4, 5)';
		function groupBy() return 'workflow_feedbacks.feedback';
		function orderBy() return 'workflow_feedbacks.feedback';
		function extra() return [ 'feedback' ];
	}
}
/**
 * @end
 */